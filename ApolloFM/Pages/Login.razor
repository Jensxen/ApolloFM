@page "/login"
@using FM.Application.Services
@using FM.Application.Services.AuthServices
@using Microsoft.AspNetCore.WebUtilities
@inject AuthService AuthService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6 offset-md-3">
            <div class="card">
                <div class="card-header bg-dark text-white">
                    Connect with Spotify
                </div>
                <div class="card-body text-center">
                    <p>Connect your Spotify account to share and discover music with others!</p>

                    <button class="btn btn-success btn-lg" @onclick="LoginWithSpotify">
                        <i class="fab fa-spotify me-2"></i> Connect with Spotify
                    </button>

                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger mt-3">
                            @errorMessage
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string errorMessage = "";

    protected override void OnInitialized()
    {
        try
        {
            var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
            var query = QueryHelpers.ParseQuery(uri.Query);

            if (query.TryGetValue("error", out var error))
            {
                errorMessage = error;
                Console.WriteLine($"Error from URL: {error}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error parsing URL: {ex.Message}");
        }
    }

    private async Task LoginWithSpotify()
    {
        try
        {
            await AuthService.LoginAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error in LoginWithSpotify: {ex.Message}");
            errorMessage = $"Error initiating login: {ex.Message}";
            StateHasChanged();
        }
    }
}
